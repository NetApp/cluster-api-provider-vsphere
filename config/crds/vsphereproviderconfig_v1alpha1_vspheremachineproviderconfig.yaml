apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: vspheremachineproviderconfigs.vsphereproviderconfig.sigs.k8s.io
spec:
  group: vsphereproviderconfig.sigs.k8s.io
  names:
    kind: VsphereMachineProviderConfig
    plural: vspheremachineproviderconfigs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        kubeadmConfiguration:
          description: KubeadmConfiguration holds the kubeadm configuration options
          properties:
            init:
              description: InitConfiguration is used to customize any kubeadm init
                configuration parameters.
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                bootstrapTokens:
                  description: BootstrapTokens is respected at `kubeadm init` time
                    and describes a set of Bootstrap Tokens to create. This information
                    IS NOT uploaded to the kubeadm cluster configmap, partly because
                    of its sensitive nature
                  items:
                    properties:
                      description:
                        description: Description sets a human-friendly message why
                          this token exists and what it's used for, so other administrators
                          can know its purpose.
                        type: string
                      expires:
                        description: Expires specifies the timestamp when this token
                          expires. Defaults to being set dynamically at runtime based
                          on the TTL. Expires and TTL are mutually exclusive.
                        format: date-time
                        type: string
                      groups:
                        description: Groups specifies the extra groups that this token
                          will authenticate as when/if used for authentication
                        items:
                          type: string
                        type: array
                      token:
                        description: Token is used for establishing bidirectional
                          trust between nodes and masters. Used for joining nodes
                          in the cluster.
                        type: object
                      ttl:
                        description: TTL defines the time to live for this token.
                          Defaults to 24h. Expires and TTL are mutually exclusive.
                        type: object
                      usages:
                        description: Usages describes the ways in which this token
                          can be used. Can by default be used for establishing bidirectional
                          trust, but that can be changed here.
                        items:
                          type: string
                        type: array
                    required:
                    - token
                    type: object
                  type: array
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                localAPIEndpoint:
                  description: LocalAPIEndpoint represents the endpoint of the API
                    server instance that's deployed on this control plane node In
                    HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint
                    in the sense that ControlPlaneEndpoint is the global endpoint
                    for the cluster, which then loadbalances the requests to each
                    individual API server. This configuration object lets you customize
                    what IP/DNS name and port the local API server advertises it's
                    accessible on. By default, kubeadm tries to auto-detect the IP
                    of the default interface and use that, but in case that process
                    fails you may set the desired value here.
                  properties:
                    advertiseAddress:
                      description: AdvertiseAddress sets the IP address for the API
                        server to advertise.
                      type: string
                    bindPort:
                      description: BindPort sets the secure port for the API Server
                        to bind to. Defaults to 6443.
                      format: int32
                      type: integer
                  required:
                  - advertiseAddress
                  - bindPort
                  type: object
                nodeRegistration:
                  description: NodeRegistration holds fields that relate to registering
                    the new master node to the cluster
                  properties:
                    criSocket:
                      description: CRISocket is used to retrieve container runtime
                        info. This information will be annotated to the Node API object,
                        for later re-use
                      type: string
                    kubeletExtraArgs:
                      description: KubeletExtraArgs passes through extra arguments
                        to the kubelet. The arguments here are passed to the kubelet
                        command line via the environment file kubeadm writes at runtime
                        for the kubelet to source. This overrides the generic base-level
                        configuration in the kubelet-config-1.X ConfigMap Flags have
                        higher priority when parsing. These values are local and specific
                        to the node kubeadm is executing on.
                      type: object
                    name:
                      description: Name is the `.Metadata.Name` field of the Node
                        API object that will be created in this `kubeadm init` or
                        `kubeadm joi≈Ñ` operation. This field is also used in the CommonName
                        field of the kubelet's client certificate to the API server.
                        Defaults to the hostname of the node if not provided.
                      type: string
                    taints:
                      description: 'Taints specifies the taints the Node API object
                        should be registered with. If this field is unset, i.e. nil,
                        in the `kubeadm init` process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                        If you don''t want to taint your master node, set this field
                        to an empty slice, i.e. `taints: {}` in the YAML file. This
                        field is solely used for Node registration.'
                      items:
                        type: object
                      type: array
                  type: object
              type: object
            join:
              description: JoinConfiguration is used to customize any kubeadm join
                configuration parameters.
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                caCertPath:
                  description: CACertPath is the path to the SSL certificate authority
                    used to secure comunications between node and master. Defaults
                    to "/etc/kubernetes/pki/ca.crt".
                  type: string
                controlPlane:
                  description: ControlPlane defines the additional control plane instance
                    to be deployed on the joining node. If nil, no additional control
                    plane instance will be deployed.
                  properties:
                    localAPIEndpoint:
                      description: LocalAPIEndpoint represents the endpoint of the
                        API server instance to be deployed on this node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress sets the IP address for the
                            API server to advertise.
                          type: string
                        bindPort:
                          description: BindPort sets the secure port for the API Server
                            to bind to. Defaults to 6443.
                          format: int32
                          type: integer
                      required:
                      - advertiseAddress
                      - bindPort
                      type: object
                  type: object
                discovery:
                  description: Discovery specifies the options for the kubelet to
                    use during the TLS Bootstrap process
                  properties:
                    bootstrapToken:
                      description: BootstrapToken is used to set the options for bootstrap
                        token based discovery BootstrapToken and File are mutually
                        exclusive
                      properties:
                        apiServerEndpoint:
                          description: APIServerEndpoint is an IP or domain name to
                            the API server from which info will be fetched.
                          type: string
                        caCertHashes:
                          description: 'CACertHashes specifies a set of public key
                            pins to verify when token-based discovery is used. The
                            root CA found during discovery must match one of these
                            values. Specifying an empty set disables root CA pinning,
                            which can be unsafe. Each hash is specified as "<type>:<value>",
                            where the only currently supported type is "sha256". This
                            is a hex-encoded SHA-256 hash of the Subject Public Key
                            Info (SPKI) object in DER-encoded ASN.1. These hashes
                            can be calculated using, for example, OpenSSL: openssl
                            x509 -pubkey -in ca.crt openssl rsa -pubin -outform der
                            2>&/dev/null | openssl dgst -sha256 -hex'
                          items:
                            type: string
                          type: array
                        token:
                          description: Token is a token used to validate cluster information
                            fetched from the master.
                          type: string
                        unsafeSkipCAVerification:
                          description: UnsafeSkipCAVerification allows token-based
                            discovery without CA verification via CACertHashes. This
                            can weaken the security of kubeadm since other nodes can
                            impersonate the master.
                          type: boolean
                      required:
                      - token
                      - unsafeSkipCAVerification
                      type: object
                    file:
                      description: File is used to specify a file or URL to a kubeconfig
                        file from which to load cluster information BootstrapToken
                        and File are mutually exclusive
                      properties:
                        kubeConfigPath:
                          description: KubeConfigPath is used to specify the actual
                            file path or URL to the kubeconfig file from which to
                            load cluster information
                          type: string
                      required:
                      - kubeConfigPath
                      type: object
                    timeout:
                      description: Timeout modifies the discovery timeout
                      type: object
                    tlsBootstrapToken:
                      description: TLSBootstrapToken is a token used for TLS bootstrapping.
                        If .BootstrapToken is set, this field is defaulted to .BootstrapToken.Token,
                        but can be overridden. If .File is set, this field **must
                        be set** in case the KubeConfigFile does not contain any other
                        authentication information
                      type: string
                  required:
                  - tlsBootstrapToken
                  type: object
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                nodeRegistration:
                  description: NodeRegistration holds fields that relate to registering
                    the new master node to the cluster
                  properties:
                    criSocket:
                      description: CRISocket is used to retrieve container runtime
                        info. This information will be annotated to the Node API object,
                        for later re-use
                      type: string
                    kubeletExtraArgs:
                      description: KubeletExtraArgs passes through extra arguments
                        to the kubelet. The arguments here are passed to the kubelet
                        command line via the environment file kubeadm writes at runtime
                        for the kubelet to source. This overrides the generic base-level
                        configuration in the kubelet-config-1.X ConfigMap Flags have
                        higher priority when parsing. These values are local and specific
                        to the node kubeadm is executing on.
                      type: object
                    name:
                      description: Name is the `.Metadata.Name` field of the Node
                        API object that will be created in this `kubeadm init` or
                        `kubeadm joi≈Ñ` operation. This field is also used in the CommonName
                        field of the kubelet's client certificate to the API server.
                        Defaults to the hostname of the node if not provided.
                      type: string
                    taints:
                      description: 'Taints specifies the taints the Node API object
                        should be registered with. If this field is unset, i.e. nil,
                        in the `kubeadm init` process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                        If you don''t want to taint your master node, set this field
                        to an empty slice, i.e. `taints: {}` in the YAML file. This
                        field is solely used for Node registration.'
                      items:
                        type: object
                      type: array
                  type: object
              required:
              - nodeRegistration
              - caCertPath
              - discovery
              type: object
          type: object
        machineRef:
          type: string
        machineSpec:
          properties:
            datacenter:
              type: string
            datastore:
              type: string
            diskGiB:
              format: int32
              type: integer
            disks:
              items:
                properties:
                  diskLabel:
                    type: string
                  diskSizeGB:
                    format: int64
                    type: integer
                type: object
              type: array
            memoryMB:
              format: int64
              type: integer
            network:
              properties:
                devices:
                  description: Devices is the list of network devices used by the
                    virtual machine.
                  items:
                    properties:
                      ipAddrs:
                        description: IPAddrs is a list of one or more IPv4 and/or
                          IPv6 addresses to assign to this device. Required when DHCP4
                          and DHCP6 are both false.
                        items:
                          type: string
                        type: array
                      macAddr:
                        description: MACAddr is the MAC address used by this device.
                          It is generally a good idea to omit this field and allow
                          a MAC address to be generated. Please note that this value
                          must use the VMware OUI to work with the in-tree vSphere
                          cloud provider.
                        type: string
                      mtu:
                        description: MTU is the device‚Äôs Maximum Transmission Unit
                          size in bytes.
                        format: int64
                        type: integer
                      nameservers:
                        description: Nameservers is a list of IPv4 and/or IPv6 addresses
                          used as DNS nameservers. Please note that Linux allows only
                          three nameservers (https://linux.die.net/man/5/resolv.conf).
                        items:
                          type: string
                        type: array
                      networkName:
                        description: NetworkName is the name of the vSphere network
                          to which the device will be connected.
                        type: string
                      routes:
                        description: Routes is a list of optional, static routes applied
                          to the device.
                        items:
                          properties:
                            metric:
                              description: Metric is the weight/priority of the route.
                              format: int32
                              type: integer
                            to:
                              description: To is an IPv4 or IPv6 address.
                              type: string
                            via:
                              description: Via is an IPv4 or IPv6 address.
                              type: string
                          required:
                          - to
                          - via
                          - metric
                          type: object
                        type: array
                      searchDomains:
                        description: SearchDomains is a list of search domains used
                          when resolving IP addresses with DNS.
                        items:
                          type: string
                        type: array
                    required:
                    - networkName
                    type: object
                  type: array
                routes:
                  description: Routes is a list of optional, static routes applied
                    to the virtual machine.
                  items:
                    properties:
                      metric:
                        description: Metric is the weight/priority of the route.
                        format: int32
                        type: integer
                      to:
                        description: To is an IPv4 or IPv6 address.
                        type: string
                      via:
                        description: Via is an IPv4 or IPv6 address.
                        type: string
                    required:
                    - to
                    - via
                    - metric
                    type: object
                  type: array
              required:
              - devices
              type: object
            ntpServers:
              items:
                type: string
              type: array
            numCPUs:
              format: int32
              type: integer
            preloaded:
              type: boolean
            resourcePool:
              type: string
            template:
              type: string
            trustedCerts:
              items:
                type: string
              type: array
            vmFolder:
              type: string
            vsphereCloudInit:
              type: boolean
          required:
          - datacenter
          - datastore
          - network
          - template
          - disks
          type: object
        metadata:
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
